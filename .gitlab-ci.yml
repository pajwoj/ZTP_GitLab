stages:
  - codeQuality
  - build
  - test
  - cacheCheck

before_script:
  - echo "Pipeline started by $GITLAB_USER_LOGIN"
  - echo "Running on branch $CI_COMMIT_BRANCH"

cacheDeps:
  key: cache-$CI_COMMIT_REF_SLUG
  paths:
    - frontend/node_modules/
    - ~/.m2/repository/

cacheTarget:
  key: cache-$CI_COMMIT_SHA
  paths:
    - target/

backendCodeQuality:
  stage: codeQuality
  image: maven:latest

  dependencies:
    - cacheDeps
    - cacheTarget

  artifacts:
    untracked: false
    when: on_success
    access: developer
    expire_in: 7 days
    paths:
      - target/site/checkstyle.html
  script:
    - mvn site

frontendCodeQuality:
  stage: codeQuality
  image: node:latest

  dependencies:
    - cacheDeps

  script:
    - npm install eslint eslint-plugin-react --save-dev
    - npx eslint --config frontend/eslint.config.mjs .

backendBuild:
  stage: build
  image: maven:latest

  dependencies:
    - cacheDeps
    - cacheTarget

  script:
    - mvn compile

frontendBuild:
  stage: build
  image: node:latest

  dependencies:
    - cacheDeps

  script:
    - cd frontend
    - npm install
    - npm run build

backendTest:
  stage: test
  image: maven:latest

  dependencies:
    - cacheDeps
    - cacheTarget

  script:
    - mvn test

frontendTest:
  stage: test
  image: maven:latest

  dependencies:
    - cacheDeps
    - cacheTarget

  before_script:
    - apt-get update
    - apt-get install -y nodejs npm

  script:
    - mvn spring-boot:run
    - cd frontend
    - npm install
    - npm start
    - npx cypress run

check_cache:
  stage: cacheCheck
  image: alpine:latest

  dependencies:
    - cacheDeps
    - cacheTarget

  script:
    - ls -al ~/.m2/repository/
    - ls -al target/
    - ls -al frontend/node_modules/
    